{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\AVA-\\\\src\\\\context\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\n\n// Define the context type\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Create context\nconst AuthContext = /*#__PURE__*/createContext(undefined);\n\n// Provider component\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(() => {\n    const storedUser = localStorage.getItem('user');\n    return storedUser ? JSON.parse(storedUser) : null;\n  });\n  const login = async credentials => {\n    const response = await fetch('https://leadinfo.site/employee/login.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(credentials)\n    });\n    const json = await response.json();\n    console.log(\"üîê Login response JSON:\", json); // <-- Log the response\n\n    if (!response.ok || !json.success) {\n      throw new Error(json.message || 'Login failed');\n    }\n    console.log(\"üîê Login Response:\");\n    console.log(\"Success:\", json.success);\n    console.log(\"Message:\", json.message);\n    console.log(\"Employee ID:\", json.data.employeeId);\n    console.log(\"Employee Name:\", json.data.employee_name);\n    console.log(\"Role:\", json.data.role);\n    console.log(\"Token:\", json.token);\n    // Save user to localStorage\n    localStorage.setItem('user', JSON.stringify(json.data));\n    localStorage.setItem('employee_name', json.data.employee_name);\n    const employeeName = localStorage.getItem('employee_name');\n    console.log(employeeName);\n    // localStorage.setItem('token', json.token);\n\n    setUser(json.data); // Update context\n  };\n  const logout = () => {\n    localStorage.removeItem('user');\n    setUser(null);\n    window.location.href = '/CRM'; // Optional: Redirect after logout\n  };\n  const isAuthenticated = !!user;\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      login,\n      logout,\n      isAuthenticated,\n      user\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\n// Hook to use AuthContext\n_s(AuthProvider, \"7dKSjXueT/sUDBmf0OexDU0zfG4=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) throw new Error('useAuth must be used within AuthProvider');\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","AuthContext","undefined","AuthProvider","children","_s","user","setUser","storedUser","localStorage","getItem","JSON","parse","login","credentials","response","fetch","method","headers","body","stringify","json","console","log","ok","success","Error","message","data","employeeId","employee_name","role","token","setItem","employeeName","logout","removeItem","window","location","href","isAuthenticated","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","$RefreshReg$"],"sources":["C:/Users/Admin/AVA-/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { LoginCredentials, User } from '../types';\r\n\r\n// Define the context type\r\ninterface AuthContextType {\r\n  login: (credentials: LoginCredentials) => Promise<void>;\r\n  logout: () => void;\r\n  isAuthenticated: boolean;\r\n  user: User | null;\r\n}\r\n\r\n// Create context\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\n// Provider component\r\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const [user, setUser] = useState<User | null>(() => {\r\n    const storedUser = localStorage.getItem('user');\r\n    return storedUser ? JSON.parse(storedUser) : null;\r\n  });\r\n\r\n  const login = async (credentials: LoginCredentials) => {\r\n  const response = await fetch('https://leadinfo.site/employee/login.php', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(credentials),\r\n  });\r\n\r\n  const json = await response.json();\r\n\r\n  console.log(\"üîê Login response JSON:\", json); // <-- Log the response\r\n\r\n  if (!response.ok || !json.success) {\r\n    throw new Error(json.message || 'Login failed');\r\n  }\r\n  console.log(\"üîê Login Response:\");\r\nconsole.log(\"Success:\", json.success);\r\nconsole.log(\"Message:\", json.message);\r\nconsole.log(\"Employee ID:\", json.data.employeeId);\r\nconsole.log(\"Employee Name:\", json.data.employee_name);\r\nconsole.log(\"Role:\", json.data.role);\r\nconsole.log(\"Token:\", json.token);\r\n  // Save user to localStorage\r\n  localStorage.setItem('user', JSON.stringify(json.data));\r\n  localStorage.setItem('employee_name', json.data.employee_name);\r\n  const employeeName = localStorage.getItem('employee_name');\r\n  console.log(employeeName);\r\n  // localStorage.setItem('token', json.token);\r\n\r\n  setUser(json.data); // Update context\r\n};\r\n\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('user');\r\n    setUser(null);\r\n    window.location.href = '/CRM'; // Optional: Redirect after logout\r\n  };\r\n\r\n  const isAuthenticated = !!user;\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ login, logout, isAuthenticated, user }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\n// Hook to use AuthContext\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) throw new Error('useAuth must be used within AuthProvider');\r\n  return context;\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}