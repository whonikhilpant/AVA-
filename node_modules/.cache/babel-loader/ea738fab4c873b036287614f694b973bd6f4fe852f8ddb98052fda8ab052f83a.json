{"ast":null,"code":"import axios from'axios';const API_BASE_URL='http://leadinfo.site/api';const api=axios.create({baseURL:API_BASE_URL,headers:{'Content-Type':'application/json'}});// Automatically attach token (if using auth in future)\n// api.interceptors.request.use((config) => {\n//   const token = localStorage.getItem('token');\n//   if (token) {\n//     config.headers.Authorization = `Bearer ${token}`;\n//   }\n//   return config;\n// });\nexport const dashboardService={async getStats(){const user=JSON.parse(localStorage.getItem('user')||'{}');const empId=user===null||user===void 0?void 0:user.employeeId;console.log(\"ðŸ“Œ Dashboard - employeeId:\",user===null||user===void 0?void 0:user.employeeId);if(!empId){throw new Error('Missing empId');}try{const response=await axios.get(\"http://leadinfo.site/employee/dashboard_stats.php?employeeId=\".concat(empId));return response.data.data;// assuming { success: true, data: { ... } }\n}catch(error){console.error('Error fetching dashboard stats:',error);throw new Error('Unable to fetch dashboard stats');}}};","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","headers","dashboardService","getStats","user","JSON","parse","localStorage","getItem","empId","employeeId","console","log","Error","response","get","concat","data","error"],"sources":["C:/Users/Admin/AVA-/src/services/dashboardService.ts"],"sourcesContent":["import axios from 'axios';\r\nimport { DashboardStats } from '../types';\r\n\r\nconst API_BASE_URL = 'http://leadinfo.site/api';\r\n\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Automatically attach token (if using auth in future)\r\n// api.interceptors.request.use((config) => {\r\n//   const token = localStorage.getItem('token');\r\n//   if (token) {\r\n//     config.headers.Authorization = `Bearer ${token}`;\r\n//   }\r\n//   return config;\r\n// });\r\n\r\nexport const dashboardService = {\r\n  async getStats(): Promise<DashboardStats> {\r\n    const user = JSON.parse(localStorage.getItem('user') || '{}');\r\n    const empId = user?.employeeId;\r\n    console.log(\"ðŸ“Œ Dashboard - employeeId:\", user?.employeeId);\r\n    if (!empId) {\r\n      throw new Error('Missing empId');\r\n    }\r\n\r\n    try {\r\n      const response = await axios.get(\r\n        `http://leadinfo.site/employee/dashboard_stats.php?employeeId=${empId}`\r\n      );\r\n      return response.data.data; // assuming { success: true, data: { ... } }\r\n    } catch (error) {\r\n      console.error('Error fetching dashboard stats:', error);\r\n      throw new Error('Unable to fetch dashboard stats');\r\n    }\r\n  },\r\n};\r\n\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAGzB,KAAM,CAAAC,YAAY,CAAG,0BAA0B,CAE/C,KAAM,CAAAC,GAAG,CAAGF,KAAK,CAACG,MAAM,CAAC,CACvBC,OAAO,CAAEH,YAAY,CACrBI,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CACF,CAAC,CAAC,CAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAO,MAAM,CAAAC,gBAAgB,CAAG,CAC9B,KAAM,CAAAC,QAAQA,CAAA,CAA4B,CACxC,KAAM,CAAAC,IAAI,CAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,EAAI,IAAI,CAAC,CAC7D,KAAM,CAAAC,KAAK,CAAGL,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEM,UAAU,CAC9BC,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAER,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEM,UAAU,CAAC,CAC3D,GAAI,CAACD,KAAK,CAAE,CACV,KAAM,IAAI,CAAAI,KAAK,CAAC,eAAe,CAAC,CAClC,CAEA,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAlB,KAAK,CAACmB,GAAG,iEAAAC,MAAA,CACkCP,KAAK,CACvE,CAAC,CACD,MAAO,CAAAK,QAAQ,CAACG,IAAI,CAACA,IAAI,CAAE;AAC7B,CAAE,MAAOC,KAAK,CAAE,CACdP,OAAO,CAACO,KAAK,CAAC,iCAAiC,CAAEA,KAAK,CAAC,CACvD,KAAM,IAAI,CAAAL,KAAK,CAAC,iCAAiC,CAAC,CACpD,CACF,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}