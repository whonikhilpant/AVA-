{"ast":null,"code":"import React,{createContext,useContext,useState}from'react';// Define the context type\nimport{jsx as _jsx}from\"react/jsx-runtime\";// Create context\nconst AuthContext=/*#__PURE__*/createContext(undefined);// Provider component\nexport const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(()=>{const storedUser=localStorage.getItem('user');return storedUser?JSON.parse(storedUser):null;});const login=async credentials=>{const response=await fetch('https://leadinfo.site/employee/login.php',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(credentials)});const json=await response.json();console.log(\"üîê Login response JSON:\",json);// <-- Log the response\nif(!response.ok||!json.success){throw new Error(json.message||'Login failed');}console.log(\"üîê Login Response:\");console.log(\"Success:\",json.success);console.log(\"Message:\",json.message);console.log(\"Employee ID:\",json.data.employeeId);console.log(\"Employee Name:\",json.data.employee_name);console.log(\"Role:\",json.data.role);console.log(\"Token:\",json.token);// Save user to localStorage\nlocalStorage.setItem('user',JSON.stringify(json.data));localStorage.setItem('employee_name',json.data.employee_name);localStorage.setItem('employeeId',json.data.employeeId);const employeeName=localStorage.getItem('employee_name');console.log(employeeName);// localStorage.setItem('token', json.token);\nsetUser(json.data);// Update context\n};const logout=()=>{localStorage.removeItem('user');setUser(null);window.location.href='/CRM';// Optional: Redirect after logout\n};const isAuthenticated=!!user;return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{login,logout,isAuthenticated,user},children:children});};// Hook to use AuthContext\nexport const useAuth=()=>{const context=useContext(AuthContext);if(!context)throw new Error('useAuth must be used within AuthProvider');return context;};","map":{"version":3,"names":["React","createContext","useContext","useState","jsx","_jsx","AuthContext","undefined","AuthProvider","_ref","children","user","setUser","storedUser","localStorage","getItem","JSON","parse","login","credentials","response","fetch","method","headers","body","stringify","json","console","log","ok","success","Error","message","data","employeeId","employee_name","role","token","setItem","employeeName","logout","removeItem","window","location","href","isAuthenticated","Provider","value","useAuth","context"],"sources":["C:/Users/Admin/AVA-/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { LoginCredentials, User } from '../types';\r\n\r\n// Define the context type\r\ninterface AuthContextType {\r\n  login: (credentials: LoginCredentials) => Promise<void>;\r\n  logout: () => void;\r\n  isAuthenticated: boolean;\r\n  user: User | null;\r\n}\r\n\r\n// Create context\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\n// Provider component\r\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const [user, setUser] = useState<User | null>(() => {\r\n    const storedUser = localStorage.getItem('user');\r\n    return storedUser ? JSON.parse(storedUser) : null;\r\n  });\r\n\r\n  const login = async (credentials: LoginCredentials) => {\r\n  const response = await fetch('https://leadinfo.site/employee/login.php', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(credentials),\r\n  });\r\n\r\n  const json = await response.json();\r\n\r\n  console.log(\"üîê Login response JSON:\", json); // <-- Log the response\r\n\r\n  if (!response.ok || !json.success) {\r\n    throw new Error(json.message || 'Login failed');\r\n  }\r\n  console.log(\"üîê Login Response:\");\r\nconsole.log(\"Success:\", json.success);\r\nconsole.log(\"Message:\", json.message);\r\nconsole.log(\"Employee ID:\", json.data.employeeId);\r\nconsole.log(\"Employee Name:\", json.data.employee_name);\r\nconsole.log(\"Role:\", json.data.role);\r\nconsole.log(\"Token:\", json.token);\r\n  // Save user to localStorage\r\n  localStorage.setItem('user', JSON.stringify(json.data));\r\n  localStorage.setItem('employee_name', json.data.employee_name);\r\n  localStorage.setItem('employeeId', json.data.employeeId);\r\n  const employeeName = localStorage.getItem('employee_name');\r\n  console.log(employeeName);\r\n  // localStorage.setItem('token', json.token);\r\n\r\n  setUser(json.data); // Update context\r\n};\r\n\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('user');\r\n    setUser(null);\r\n    window.location.href = '/CRM'; // Optional: Redirect after logout\r\n  };\r\n\r\n  const isAuthenticated = !!user;\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ login, logout, isAuthenticated, user }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\n// Hook to use AuthContext\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) throw new Error('useAuth must be used within AuthProvider');\r\n  return context;\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}