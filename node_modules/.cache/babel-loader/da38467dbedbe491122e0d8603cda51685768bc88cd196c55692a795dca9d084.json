{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\AVA-\\\\src\\\\context\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { authService } from '../services/authService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n// Demo user data\nconst DEMO_USERS = [{\n  id: '1',\n  employeeId: 'NK2710IN',\n  name: 'Nikhil Pant',\n  email: 'nikhil.pant@avaconsultancy.com',\n  role: 'manager',\n  department: 'Sales',\n  avatar: undefined,\n  createdAt: new Date('2024-01-01'),\n  updatedAt: new Date()\n}, {\n  id: '2',\n  employeeId: 'EMP001',\n  name: 'John Doe',\n  email: 'john.doe@avaconsultancy.com',\n  role: 'employee',\n  department: 'Marketing',\n  avatar: undefined,\n  createdAt: new Date('2024-01-01'),\n  updatedAt: new Date()\n}, {\n  id: '3',\n  employeeId: 'EMP002',\n  name: 'Jane Smith',\n  email: 'jane.smith@avaconsultancy.com',\n  role: 'admin',\n  department: 'IT',\n  avatar: undefined,\n  createdAt: new Date('2024-01-01'),\n  updatedAt: new Date()\n}];\n\n// Demo credentials (employeeId: password)\nconst DEMO_CREDENTIALS = {\n  'NK2710IN': 'password123',\n  'EMP001': 'password123',\n  'EMP002': 'password123'\n};\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const initializeAuth = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const savedUser = localStorage.getItem('user');\n        if (token && savedUser) {\n          const userData = JSON.parse(savedUser);\n          setUser(userData);\n        }\n      } catch (error) {\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    initializeAuth();\n  }, []);\n  const login = async credentials => {\n    try {\n      setIsLoading(true);\n\n      // Demo login logic\n      const demoPassword = DEMO_CREDENTIALS[credentials.employeeId];\n      if (demoPassword && credentials.password === demoPassword) {\n        const userData = DEMO_USERS.find(user => user.employeeId === credentials.employeeId);\n        if (userData) {\n          const mockToken = `demo_token_${Date.now()}`;\n          const mockResponse = {\n            user: userData,\n            token: mockToken\n          };\n          localStorage.setItem('token', mockToken);\n          localStorage.setItem('user', JSON.stringify(userData));\n          setUser(userData);\n          return;\n        }\n      }\n\n      // If demo login fails, try actual API\n      try {\n        const response = await authService.login(credentials);\n        localStorage.setItem('token', response.token);\n        localStorage.setItem('user', JSON.stringify(response.user));\n        setUser(response.user);\n      } catch (apiError) {\n        throw new Error('Invalid credentials. Please try again.');\n      }\n    } catch (error) {\n      throw error;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setUser(null);\n  };\n  const updateUser = userData => {\n    if (user) {\n      const updatedUser = {\n        ...user,\n        ...userData\n      };\n      setUser(updatedUser);\n      localStorage.setItem('user', JSON.stringify(updatedUser));\n    }\n  };\n  const value = {\n    user,\n    isAuthenticated: !!user,\n    isLoading,\n    login,\n    logout,\n    updateUser\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 10\n  }, this);\n};\n_s2(AuthProvider, \"YajQB7LURzRD+QP5gw0+K2TZIWA=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","authService","jsxDEV","_jsxDEV","AuthContext","undefined","useAuth","_s","context","Error","DEMO_USERS","id","employeeId","name","email","role","department","avatar","createdAt","Date","updatedAt","DEMO_CREDENTIALS","AuthProvider","children","_s2","user","setUser","isLoading","setIsLoading","initializeAuth","token","localStorage","getItem","savedUser","userData","JSON","parse","error","removeItem","login","credentials","demoPassword","password","find","mockToken","now","mockResponse","setItem","stringify","response","apiError","logout","updateUser","updatedUser","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Admin/AVA-/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\r\nimport { User, LoginCredentials, AuthResponse } from '../types';\r\nimport { authService } from '../services/authService';\r\n\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  isAuthenticated: boolean;\r\n  isLoading: boolean;\r\n  login: (credentials: LoginCredentials) => Promise<void>;\r\n  logout: () => void;\r\n  updateUser: (userData: Partial<User>) => void;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\ninterface AuthProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\n// Demo user data\r\nconst DEMO_USERS = [\r\n  {\r\n    id: '1',\r\n    employeeId: 'NK2710IN',\r\n    name: 'Nikhil Pant',\r\n    email: 'nikhil.pant@avaconsultancy.com',\r\n    role: 'manager' as const,\r\n    department: 'Sales',\r\n    avatar: undefined,\r\n    createdAt: new Date('2024-01-01'),\r\n    updatedAt: new Date(),\r\n  },\r\n  {\r\n    id: '2',\r\n    employeeId: 'EMP001',\r\n    name: 'John Doe',\r\n    email: 'john.doe@avaconsultancy.com',\r\n    role: 'employee' as const,\r\n    department: 'Marketing',\r\n    avatar: undefined,\r\n    createdAt: new Date('2024-01-01'),\r\n    updatedAt: new Date(),\r\n  },\r\n  {\r\n    id: '3',\r\n    employeeId: 'EMP002',\r\n    name: 'Jane Smith',\r\n    email: 'jane.smith@avaconsultancy.com',\r\n    role: 'admin' as const,\r\n    department: 'IT',\r\n    avatar: undefined,\r\n    createdAt: new Date('2024-01-01'),\r\n    updatedAt: new Date(),\r\n  },\r\n];\r\n\r\n// Demo credentials (employeeId: password)\r\nconst DEMO_CREDENTIALS = {\r\n  'NK2710IN': 'password123',\r\n  'EMP001': 'password123',\r\n  'EMP002': 'password123',\r\n};\r\n\r\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const initializeAuth = async () => {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        const savedUser = localStorage.getItem('user');\r\n        \r\n        if (token && savedUser) {\r\n          const userData = JSON.parse(savedUser);\r\n          setUser(userData);\r\n        }\r\n      } catch (error) {\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('user');\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    initializeAuth();\r\n  }, []);\r\n\r\n  const login = async (credentials: LoginCredentials) => {\r\n    try {\r\n      setIsLoading(true);\r\n      \r\n      // Demo login logic\r\n      const demoPassword = DEMO_CREDENTIALS[credentials.employeeId as keyof typeof DEMO_CREDENTIALS];\r\n      \r\n      if (demoPassword && credentials.password === demoPassword) {\r\n        const userData = DEMO_USERS.find(user => user.employeeId === credentials.employeeId);\r\n        \r\n        if (userData) {\r\n          const mockToken = `demo_token_${Date.now()}`;\r\n          const mockResponse: AuthResponse = {\r\n            user: userData,\r\n            token: mockToken,\r\n          };\r\n          \r\n          localStorage.setItem('token', mockToken);\r\n          localStorage.setItem('user', JSON.stringify(userData));\r\n          setUser(userData);\r\n          return;\r\n        }\r\n      }\r\n      \r\n      // If demo login fails, try actual API\r\n      try {\r\n        const response: AuthResponse = await authService.login(credentials);\r\n        localStorage.setItem('token', response.token);\r\n        localStorage.setItem('user', JSON.stringify(response.user));\r\n        setUser(response.user);\r\n      } catch (apiError) {\r\n        throw new Error('Invalid credentials. Please try again.');\r\n      }\r\n    } catch (error) {\r\n      throw error;\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    setUser(null);\r\n  };\r\n\r\n  const updateUser = (userData: Partial<User>) => {\r\n    if (user) {\r\n      const updatedUser = { ...user, ...userData };\r\n      setUser(updatedUser);\r\n      localStorage.setItem('user', JSON.stringify(updatedUser));\r\n    }\r\n  };\r\n\r\n  const value: AuthContextType = {\r\n    user,\r\n    isAuthenticated: !!user,\r\n    isLoading,\r\n    login,\r\n    logout,\r\n    updateUser,\r\n  };\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}