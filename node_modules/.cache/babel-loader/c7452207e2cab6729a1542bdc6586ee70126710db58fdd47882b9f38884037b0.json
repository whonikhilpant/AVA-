{"ast":null,"code":"import axios from'axios';const API_BASE_URL=process.env.REACT_APP_API_URL||'http://localhost:5000/api';const api=axios.create({baseURL:API_BASE_URL,headers:{'Content-Type':'application/json'}});// Add token to requests\napi.interceptors.request.use(config=>{const token=localStorage.getItem('token');if(token){config.headers.Authorization=\"Bearer \".concat(token);}return config;});// Mock data for demo mode\nconst MOCK_DASHBOARD_STATS={attendance:{totalDays:22,presentDays:20,absentDays:1,lateDays:1,attendancePercentage:90.9},totalLeads:45,activeLeads:12,totalEvents:8,upcomingEvents:3,emailsSent:156,emailsRead:142};export const dashboardService={async getStats(){try{const response=await api.get('/dashboard/stats');return response.data;}catch(error){// Return mock data if API fails (demo mode)\nconsole.log('Using mock dashboard data (demo mode)');return MOCK_DASHBOARD_STATS;}},async getRecentActivity(){try{const response=await api.get('/dashboard/activity');return response.data;}catch(error){// Return mock activity data\nreturn[{id:'1',type:'email',message:'Email sent to client',timestamp:new Date(Date.now()-2*60*60*1000)// 2 hours ago\n},{id:'2',type:'attendance',message:'Attendance marked',timestamp:new Date(Date.now()-4*60*60*1000)// 4 hours ago\n},{id:'3',type:'lead',message:'New lead added',timestamp:new Date(Date.now()-6*60*60*1000)// 6 hours ago\n}];}},async getAttendanceChart(){try{const response=await api.get('/dashboard/attendance-chart');return response.data;}catch(error){// Return mock chart data\nreturn{labels:['Mon','Tue','Wed','Thu','Fri'],data:[95,88,92,85,91]};}},async getLeadStats(){try{const response=await api.get('/dashboard/leads');return response.data;}catch(error){// Return mock lead stats\nreturn{total:45,new:12,contacted:18,qualified:10,won:3,lost:2};}},async getEmailStats(){try{const response=await api.get('/dashboard/emails');return response.data;}catch(error){// Return mock email stats\nreturn{sent:156,delivered:152,read:142,failed:4};}}};","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","concat","MOCK_DASHBOARD_STATS","attendance","totalDays","presentDays","absentDays","lateDays","attendancePercentage","totalLeads","activeLeads","totalEvents","upcomingEvents","emailsSent","emailsRead","dashboardService","getStats","response","get","data","error","console","log","getRecentActivity","id","type","message","timestamp","Date","now","getAttendanceChart","labels","getLeadStats","total","new","contacted","qualified","won","lost","getEmailStats","sent","delivered","read","failed"],"sources":["C:/Users/Admin/AVA-/src/services/dashboardService.ts"],"sourcesContent":["import axios from 'axios';\r\nimport { DashboardStats } from '../types';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Add token to requests\r\napi.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem('token');\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\n// Mock data for demo mode\r\nconst MOCK_DASHBOARD_STATS: DashboardStats = {\r\n  attendance: {\r\n    totalDays: 22,\r\n    presentDays: 20,\r\n    absentDays: 1,\r\n    lateDays: 1,\r\n    attendancePercentage: 90.9,\r\n  },\r\n  totalLeads: 45,\r\n  activeLeads: 12,\r\n  totalEvents: 8,\r\n  upcomingEvents: 3,\r\n  emailsSent: 156,\r\n  emailsRead: 142,\r\n};\r\n\r\nexport const dashboardService = {\r\n  async getStats(): Promise<DashboardStats> {\r\n    try {\r\n      const response = await api.get('/dashboard/stats');\r\n      return response.data;\r\n    } catch (error) {\r\n      // Return mock data if API fails (demo mode)\r\n      console.log('Using mock dashboard data (demo mode)');\r\n      return MOCK_DASHBOARD_STATS;\r\n    }\r\n  },\r\n\r\n  async getRecentActivity() {\r\n    try {\r\n      const response = await api.get('/dashboard/activity');\r\n      return response.data;\r\n    } catch (error) {\r\n      // Return mock activity data\r\n      return [\r\n        {\r\n          id: '1',\r\n          type: 'email',\r\n          message: 'Email sent to client',\r\n          timestamp: new Date(Date.now() - 2 * 60 * 60 * 1000), // 2 hours ago\r\n        },\r\n        {\r\n          id: '2',\r\n          type: 'attendance',\r\n          message: 'Attendance marked',\r\n          timestamp: new Date(Date.now() - 4 * 60 * 60 * 1000), // 4 hours ago\r\n        },\r\n        {\r\n          id: '3',\r\n          type: 'lead',\r\n          message: 'New lead added',\r\n          timestamp: new Date(Date.now() - 6 * 60 * 60 * 1000), // 6 hours ago\r\n        },\r\n      ];\r\n    }\r\n  },\r\n\r\n  async getAttendanceChart() {\r\n    try {\r\n      const response = await api.get('/dashboard/attendance-chart');\r\n      return response.data;\r\n    } catch (error) {\r\n      // Return mock chart data\r\n      return {\r\n        labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri'],\r\n        data: [95, 88, 92, 85, 91],\r\n      };\r\n    }\r\n  },\r\n\r\n  async getLeadStats() {\r\n    try {\r\n      const response = await api.get('/dashboard/leads');\r\n      return response.data;\r\n    } catch (error) {\r\n      // Return mock lead stats\r\n      return {\r\n        total: 45,\r\n        new: 12,\r\n        contacted: 18,\r\n        qualified: 10,\r\n        won: 3,\r\n        lost: 2,\r\n      };\r\n    }\r\n  },\r\n\r\n  async getEmailStats() {\r\n    try {\r\n      const response = await api.get('/dashboard/emails');\r\n      return response.data;\r\n    } catch (error) {\r\n      // Return mock email stats\r\n      return {\r\n        sent: 156,\r\n        delivered: 152,\r\n        read: 142,\r\n        failed: 4,\r\n      };\r\n    }\r\n  },\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}