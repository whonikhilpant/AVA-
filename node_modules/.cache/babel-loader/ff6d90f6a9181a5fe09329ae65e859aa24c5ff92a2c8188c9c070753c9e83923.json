{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add token to requests\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\nexport const dashboardService = {\n  async getStats() {\n    const response = await api.get('/dashboard/stats');\n    return response.data;\n  },\n  async getRecentActivity() {\n    const response = await api.get('/dashboard/activity');\n    return response.data;\n  },\n  async getAttendanceChart() {\n    const response = await api.get('/dashboard/attendance-chart');\n    return response.data;\n  },\n  async getLeadStats() {\n    const response = await api.get('/dashboard/leads');\n    return response.data;\n  },\n  async getEmailStats() {\n    const response = await api.get('/dashboard/emails');\n    return response.data;\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","dashboardService","getStats","response","get","data","getRecentActivity","getAttendanceChart","getLeadStats","getEmailStats"],"sources":["C:/Users/praka/AVA/src/services/dashboardService.ts"],"sourcesContent":["import axios from 'axios';\r\nimport { DashboardStats } from '../types';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Add token to requests\r\napi.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem('token');\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\nexport const dashboardService = {\r\n  async getStats(): Promise<DashboardStats> {\r\n    const response = await api.get('/dashboard/stats');\r\n    return response.data;\r\n  },\r\n\r\n  async getRecentActivity() {\r\n    const response = await api.get('/dashboard/activity');\r\n    return response.data;\r\n  },\r\n\r\n  async getAttendanceChart() {\r\n    const response = await api.get('/dashboard/attendance-chart');\r\n    return response.data;\r\n  },\r\n\r\n  async getLeadStats() {\r\n    const response = await api.get('/dashboard/leads');\r\n    return response.data;\r\n  },\r\n\r\n  async getEmailStats() {\r\n    const response = await api.get('/dashboard/emails');\r\n    return response.data;\r\n  },\r\n}; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;AAEjF,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC;EACvBC,OAAO,EAAEN,YAAY;EACrBO,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACvC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,CAAC;AAEF,OAAO,MAAMK,gBAAgB,GAAG;EAC9B,MAAMC,QAAQA,CAAA,EAA4B;IACxC,MAAMC,QAAQ,GAAG,MAAMd,GAAG,CAACe,GAAG,CAAC,kBAAkB,CAAC;IAClD,OAAOD,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED,MAAMC,iBAAiBA,CAAA,EAAG;IACxB,MAAMH,QAAQ,GAAG,MAAMd,GAAG,CAACe,GAAG,CAAC,qBAAqB,CAAC;IACrD,OAAOD,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED,MAAME,kBAAkBA,CAAA,EAAG;IACzB,MAAMJ,QAAQ,GAAG,MAAMd,GAAG,CAACe,GAAG,CAAC,6BAA6B,CAAC;IAC7D,OAAOD,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED,MAAMG,YAAYA,CAAA,EAAG;IACnB,MAAML,QAAQ,GAAG,MAAMd,GAAG,CAACe,GAAG,CAAC,kBAAkB,CAAC;IAClD,OAAOD,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED,MAAMI,aAAaA,CAAA,EAAG;IACpB,MAAMN,QAAQ,GAAG,MAAMd,GAAG,CAACe,GAAG,CAAC,mBAAmB,CAAC;IACnD,OAAOD,QAAQ,CAACE,IAAI;EACtB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}