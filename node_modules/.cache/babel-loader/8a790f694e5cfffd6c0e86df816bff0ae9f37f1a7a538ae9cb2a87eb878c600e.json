{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\AVA-\\\\src\\\\pages\\\\EmailScheduler.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { DateTime } from 'luxon';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst countryTimeSlots = [{\n  country: 'USA (EST)',\n  timezone: 'America/New_York',\n  morningStart: '08:00',\n  morningEnd: '11:00'\n}, {\n  country: 'UK',\n  timezone: 'Europe/London',\n  morningStart: '08:00',\n  morningEnd: '11:00'\n}, {\n  country: 'India',\n  timezone: 'Asia/Kolkata',\n  morningStart: '08:00',\n  morningEnd: '11:00'\n}, {\n  country: 'Australia',\n  timezone: 'Australia/Sydney',\n  morningStart: '08:00',\n  morningEnd: '11:00'\n}];\nconst EmailScheduler = () => {\n  _s();\n  const [slots, setSlots] = useState([]);\n  useEffect(() => {\n    const istZone = 'Asia/Kolkata';\n    const converted = countryTimeSlots.map(item => {\n      const start = DateTime.fromFormat(item.morningStart, 'HH:mm', {\n        zone: item.timezone\n      });\n      const end = DateTime.fromFormat(item.morningEnd, 'HH:mm', {\n        zone: item.timezone\n      });\n      const istStart = start.setZone(istZone).toFormat('hh:mm a');\n      const istEnd = end.setZone(istZone).toFormat('hh:mm a');\n      return {\n        ...item,\n        istSlot: `${istStart} - ${istEnd}`\n      };\n    });\n    setSlots(converted);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 bg-white rounded-lg shadow\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold mb-4 text-gray-800\",\n      children: \"Email Timing Guide (IST)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"w-full table-auto border-collapse\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"bg-gray-100 text-left text-sm text-gray-600\",\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"p-2\",\n            children: \"Country\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"p-2\",\n            children: \"Morning Time (Local)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"p-2\",\n            children: \"Send Between (IST)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: slots.map((slot, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"border-t\",\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"p-2\",\n            children: slot.country\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"p-2\",\n            children: [slot.morningStart, \" - \", slot.morningEnd]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"p-2 font-medium text-blue-600\",\n            children: slot.istSlot\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(EmailScheduler, \"2UqXCi85+ev3OjCCdaN74aZmXow=\");\n_c = EmailScheduler;\nexport default EmailScheduler;\nvar _c;\n$RefreshReg$(_c, \"EmailScheduler\");","map":{"version":3,"names":["React","useEffect","useState","DateTime","jsxDEV","_jsxDEV","countryTimeSlots","country","timezone","morningStart","morningEnd","EmailScheduler","_s","slots","setSlots","istZone","converted","map","item","start","fromFormat","zone","end","istStart","setZone","toFormat","istEnd","istSlot","className","children","fileName","_jsxFileName","lineNumber","columnNumber","slot","idx","_c","$RefreshReg$"],"sources":["C:/Users/Admin/AVA-/src/pages/EmailScheduler.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { DateTime } from 'luxon';\r\n\r\nconst countryTimeSlots = [\r\n  { country: 'USA (EST)', timezone: 'America/New_York', morningStart: '08:00', morningEnd: '11:00' },\r\n  { country: 'UK', timezone: 'Europe/London', morningStart: '08:00', morningEnd: '11:00' },\r\n  { country: 'India', timezone: 'Asia/Kolkata', morningStart: '08:00', morningEnd: '11:00' },\r\n  { country: 'Australia', timezone: 'Australia/Sydney', morningStart: '08:00', morningEnd: '11:00' }\r\n];\r\n\r\nconst EmailScheduler: React.FC = () => {\r\n  const [slots, setSlots] = useState<any[]>([]);\r\n\r\n  useEffect(() => {\r\n    const istZone = 'Asia/Kolkata';\r\n\r\n    const converted = countryTimeSlots.map(item => {\r\n      const start = DateTime.fromFormat(item.morningStart, 'HH:mm', { zone: item.timezone });\r\n      const end = DateTime.fromFormat(item.morningEnd, 'HH:mm', { zone: item.timezone });\r\n\r\n      const istStart = start.setZone(istZone).toFormat('hh:mm a');\r\n      const istEnd = end.setZone(istZone).toFormat('hh:mm a');\r\n\r\n      return {\r\n        ...item,\r\n        istSlot: `${istStart} - ${istEnd}`\r\n      };\r\n    });\r\n\r\n    setSlots(converted);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"p-6 bg-white rounded-lg shadow\">\r\n      <h2 className=\"text-xl font-bold mb-4 text-gray-800\">Email Timing Guide (IST)</h2>\r\n      <table className=\"w-full table-auto border-collapse\">\r\n        <thead>\r\n          <tr className=\"bg-gray-100 text-left text-sm text-gray-600\">\r\n            <th className=\"p-2\">Country</th>\r\n            <th className=\"p-2\">Morning Time (Local)</th>\r\n            <th className=\"p-2\">Send Between (IST)</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {slots.map((slot, idx) => (\r\n            <tr key={idx} className=\"border-t\">\r\n              <td className=\"p-2\">{slot.country}</td>\r\n              <td className=\"p-2\">{slot.morningStart} - {slot.morningEnd}</td>\r\n              <td className=\"p-2 font-medium text-blue-600\">{slot.istSlot}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmailScheduler;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}